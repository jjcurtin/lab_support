---
title: "revealjs demonstration slide deck"
subtitle: "https://jjcurtin.quarto.pub/revealjs-demonstration-slide-deck/"
author: "John J. Curtin, Ph.D."
institute: "University of Wisconsin-Madison"
date: November 15, 2024
format: 
  revealjs:
    css: presentation.css
    scrollable: false 
    slide-number: false 
    multiplex: false 
    auto-stretch: false
title-slide-attributes:
  data-background-image: images/demo_kitten-400-350.jpeg
  data-background-size: 40%
  data-background-repeat: no
  data-background-position: left 10% bottom 10%
editor_options: 
  chunk_output_type: console
---

## Solid infrastructure for presentations

- Create a github repo for your slides (e.g., `slide_decks`)

- Clone that repo onto your computer (`git clone git@github.com:USERNAME/slide_decks.git`)

- Make an R project at the root of this folder to handle paths

- Add the following folders
  - fig
  - mak
  - csv 
  - images

- If you are a Windows user, you will need to install Git and Bash to be able to work with your repo and publish your slide decks at terminal (which is preferred)
  - Install [Git for Windows](https://gitforwindows.org/)
  - Linux/Mac users to NOT need to do this.

-----------------------------------------------------------------------------

## Solid infrastructure for presentations

- Add/download the following files into root of your locally cloned repo 
  - [demo_slides.qmd](demo_slides.qmd)
  - [presentation.css](presentation.css)
  - [publish.sh](publish.sh)
 
- Add the following file to your `fig` folder (my demo slides use it)
  - [fig.R](fig/demo_fig.R) 
 
- Add the following files to your `images` folder (again for demo slides)
  - [demo_kitten-300-200.jpeg](images/demo_kitten-300-200.jpeg) 
  - [demo_kitten-400-350.jpeg](images/demo_kitten-400-350.jpeg) 
  - [demo_kitten-450-250.jpeg](images/demo_kitten-450-250.jpeg) 
  - [demo_milky-way.jpeg](images/demo_milky-way.jpeg) 
  - [demo_moon.png](images/demo_moon.png) 
  - [demo_sky.png](images/demo_sky.png) 

- Now do `git add .`, `git commit -m "add demo files"`, and `git push` to get these changes up to  your remote copy of the repo on github 

-----------------------------------------------------------------------------

## Why Quarto and revealjs?

- Open source/free
- Better version control (text vs. binary and size)
- Figs/tables update with changes in data
- Reusable code (DRY)
- Spend your time in Quarto and Markdown and become a master!

-----------------------------------------------------------------------------

## How to publish slides

- Open terminal and navigate to your repo
- `quarto publish quarto-pub demo_slides.qmd`
- Accept defaults the first time (saved in `_publish.yml`)

But better to use the `publish.sh` script

- Allows you to execute a series of bash commands rather than just `publish`
- The sample is simple but you could build on it (e.g., commit your changes and push)
- run it with `. publish.sh demo_slides`

-----------------------------------------------------------------------------

## Slide Titles, Separators, and Notes 

I pull these examples heavily from documentation on the [quarto website](https://quarto.org/docs/presentations/revealjs/) but focus on what we find useful.

In this demonstration, we start with a simple slide to demonstrate several big points

- We use `##` for slide titles
- We separate slides using a string of `-----------` (though a title starts a new slide by default too)
- revealjs makes heavy use of div containers.  These begin and end with `:::` and the start of the container can have its properties specified by arguments inside of `{}`
- See the notes div for presenter notes on this first slide
  
::: {.notes}
This is a field to put notes that you can see in the presenter view.  

Divs begin with `:::` and end with `:::`

You the number of `:` is arbitrary but should match when nesting divs.

You specify the class of the div in the curly braces.  In this case, we are using the class "notes"

Divs have many other uses including for callouts and to control the appearance of the slide.
:::

-----------------------------------------------------------------------------

This is a slide without a title.  The use of string of `---` is sufficient to separate slides.

This slide also displays an image.

- Notice the control of image placement and size inside curly braces
- More on this in next slide
- The image can saved and loaded from github (as in this slide) or could be saved locally with your qmd file (next slide).

![](https://github.com/jjcurtin/lab_support/blob/main/templates/revealjs/images/demo_kitten-400-350.jpeg?raw=true){.absolute bottom=0 right=50 width=45%}

::: {.notes}
Here are some more notes.   I will stop using notes for the remaining slides....
:::

-----------------------------------------------------------------------------

## Absolute Position

You can position images or other elements at precise locations

Also notice the use of `.fragment` inside the curly braces of the second two images to have them come in as incremental fragments (more on that in a later slide)

![](images/demo_kitten-400-350.jpeg){.absolute top=170 left=30 width=400 height=400}

![](images/demo_kitten-450-250.jpeg){.absolute .fragment top=160 right=80 width=450}

![](images/demo_kitten-300-200.jpeg){.absolute .fragment .fade-up bottom=110 right=130 width=300}

::: footer
Learn more: [Absolute Position](https://quarto.org/docs/presentations/revealjs/advanced.html#absolute-position)
:::

-----------------------------------------------------------------------------

## Incremental Bullet Points - Option 1

Lists can optionally be displayed incrementally using a `::: { .incremental}` div

::: { .incremental}
-   First item
-   Second item
-   Third item
:::

-----------------------------------------------------------------------------

## Incremental Bullet Points - Option 2 (pauses)

Content can also come in incrementally using pauses.

. . .

Pauses are indicated by `. . .` on their own line.

. . .

This will work with any content, plots, etc;  Not just bullet points, so its a solution if you want to reveal more than just bullet points.

![](images/demo_kitten-300-200.jpeg)

. . .

Note that it automatically makes previous items gray but this doesn't apply to the first item which is before the first pause.  Could fix by starting with a pause (but then need double click to display first content).

. . .

I don't use a lot of pauses or incremental lists. I prefer the next two options.

-----------------------------------------------------------------------------

## Incremental Bullet Points - Option 3 (separate slides)

Lists can also be displayed incrementally by putting them on separate slides.  
As the slides advance, you can manually color the previous points gray.  Put the text in `[]` and the color in `{style="color: gray;"}`.

This is my preferred method for **presentations** where I am using notes heavily because it allows for more room for notes on each bullet point (though it does require coping content across slides).

- First item 

-----------------------------------------------------------------------------

## Incremental Bullet Points - Option 3 (separate slides)

Lists can also be displayed incrementally by putting them on separate slides.  
As the slides advance, you can manually color the previous points gray.  Put the text in `[]` and the color in `{style="color: gray;"}`.

This is my preferred method for **presentations** where I am using notes heavily because it allows for more room for notes on each bullet point (though it does require coping content across slides).

- [First item ]{style="color: gray;"}
- Second item

-----------------------------------------------------------------------------

## Incremental Bullet Points - Option 3 (separate slides)

Lists can also be displayed incrementally by putting them on separate slides.  
As the slides advance, you can manually color the previous points gray.  Put the text in `[]` and the color in `{style="color: gray;"}`.

This is my preferred method for **presentations** where I am using notes heavily because it allows for more room for notes on each bullet point (though it does require coping content across slides).

- [First item ]{style="color: gray;"}
- [Second item]{style="color: gray;"}
- Third item

-----------------------------------------------------------------------------

## Incremental Bullet Points - Option 4 (fragments)

Animated incremental text (or other content like plots, etc) can be handled with fragments.  This is my preferred method for **teaching** because it doesn't require duplicating the content across slides and I don't use notes when I teach.

::: {.fragment .strike}
Strike (displayed at start)
:::

::: {.fragment .highlight-red}
Highlight red (displayed at start)
:::

::: {.fragment .fade-in}
Fade in (hidden at start).  Fraqments can contain any content, not just text.  Here is an image:

![](images/demo_kitten-300-200.jpeg)
:::

::: {.fragment .fade-up}
Slide up while fading in (hidden at start)
:::

::: {.fragment .fade-left}
Slide left while fading in (hidden at start)
:::

::: {.fragment .fade-in-then-semi-out}
Fade in then semi out (hidden at start)
:::

::: footer
Learn more: [Fragments](https://quarto.org/docs/presentations/revealjs/advanced.html#fragments)
:::

-----------------------------------------------------------------------------

## Quotes

This slide demonstrates the use of a quote with `>`

- Notice the use of colored text.  This can be used with any text, not just quotes
- Notice the use of `<\br>` <br> to create line breaks in the text

\
\

> “Could you predict not only [who]{style="color: blue;"} might be at greatest risk for relapse … <br>
 … but precisely [when]{style="color: blue;"} that relapse might occur … <br>
 … and [how best to intervene]{style="color: blue;"} to prevent it?"
 
 \
 \

Here is normal text after the quote.  

Notice the addition of extra blank lines to increase spacing using `\`

-----------------------------------------------------------------------------

## Callouts 

Here is the use of a callout div

- There are a few types
  - note
  - tips
  - important
  - caution
  - warning

- The types vary in the header color and icon
- You can find more detail on the [quarto website](https://quarto.org/docs/blog/posts/2022-02-13-feature-callouts/)

:::{.callout-tip}
## Rules of thumb for auROC 
.70 - .80 is considered fair  
.80 - .90 is considered good  
\>= .90 is considered excellent  
:::

-----------------------------------------------------------------------------

## Callouts 

- You can suppress the icon if you want using `{.callout-tip icon=false}`

:::{.callout-tip icon=false}
## Rules of thumb for auROC 
.70 - .80 is considered fair  
.80 - .90 is considered good  
\>= .90 is considered excellent  
:::

-----------------------------------------------------------------------------

## Footers

You can add footers to specific slides using a footer div `::: {.footer}`

::: {.footer}
Curtin et al., 2024
:::

-----------------------------------------------------------------------------

## Columns 

::: {.columns}
:::: {.column width=60%}
We can break the slides up into columns

- We use nested divs for this
- Top level div (use `::: {.columns}`) to start the container for the columns.  End the columns with `:::`
- Next level div (use `::::`) is the container for each column.  End each column with `::::`
:::::

:::: {.column width=40%}
The columns can be of different widths

- Specify the width for each specific column with the div that starts the column
- e.g., `:::: {.column width=40%}`
- Note that there is no space before or after `=`.  Quarto is a bit finicky!
- Note also that you will sometimes see quotes around the argument (e.g. `"40%"`) but those are NOT needed so I try to be consistent in not using them!
::::
:::

-----------------------------------------------------------------------------

## Columns 

::: {.columns}
:::: {.column width=45%}
If you want more separation between columns, you can add an empty narrow column between the others.  
:::::

:::: {.column width=10%}
::::

:::: {.column width=45%}
This is a good way to add space between columns. 
::::
:::

-----------------------------------------------------------------------------

## Plots created in slide

You can make plots directly in the slides using R code chunks

- You need to load relevant libraries and set themes, etc (once)
- You can set the size of the plot in the chunk options and suppress messages

```{r}
#| message: false

library(tidyverse)
theme_set(theme_classic()) 

tibble(value = rnorm(100)) |> 
  ggplot(aes(x=value)) + 
    geom_histogram()
```

-----------------------------------------------------------------------------

## Plots created by separate scripts

::: {.columns}
:::: {.column width=50%}
You can also make plots in separate scripts

Source the script (use project path combined with `here::here()`) and then display the plot object

Good for reusable plot code

I use this approach for my presentations. I also do side by side text and plot a lot
::::

:::: {.column width=50%}
```{r}
source(here::here("fig", "demo_fig.R"))
fig_hist
```
::::
:::

-----------------------------------------------------------------------------

## Plot sizing

You can set the size of the plot in the chunk options using `fig-height` and `fig-width`.  Here is a four inch high plot (with no setting for width) 

```{r}
#| fig-height: 4

fig_hist
```

-----------------------------------------------------------------------------
  
## Plot sizing

here is a 4 x 4 inch high plot

```{r}
#| fig-height: 4
#| fig-width: 4

fig_hist
```

-----------------------------------------------------------------------------
  
## Plot sizing

here is a 2 x 2 inch high plot

```{r}
#| fig-height: 2
#| fig-width: 2

fig_hist
```
-----------------------------------------------------------------------------
 
## Slide backgrounds {background=#43464B}

Set the `background` attribute on a slide to change the background color (all CSS color formats are supported).

For example: `## Slide Backgrounds {background=#43464B}`

::: footer
Learn more: [Slide Backgrounds](https://quarto.org/docs/presentations/revealjs/#color-backgrounds)
:::

-----------------------------------------------------------------------------

## Media Backgrounds {background=#43464B background-image=images/demo_milky-way.jpeg}

You can also use the following as a slide background:

-   An image: `background-image`

-   A video: `background-video`

-   An iframe: `background-iframe`

::: footer
Learn more: [Media Backgrounds](https://quarto.org/docs/presentations/revealjs/#image-backgrounds)
:::

-----------------------------------------------------------------------------

## Box/Oval for attention focus

We can put a box or oval around some part of a slide to focus audience attention

It would typically be put in a fragment to have it appear incrementally (see `.fragment` in the curly braces)

The class that supports this is in our css file (presentation.css).  You can overide any of the parameters in the css definition by specifying them in the curly braces.  Height and width would be the most common to change.

```{r}
#| fig-height: 4
#| fig-width: 4

fig_hist
```

::: {.circ_outline .absolute bottom=10% left=10% width=200px .fragment}
:::

::: {.rect_outline .absolute bottom=40% left=50% height=200px width=300px .fragment}
:::

-----------------------------------------------------------------------------

## Other Details

- [Chalkboard](https://quarto.org/docs/presentations/revealjs/presenting.html#Chalkboard)
- [Scrollable](https://quarto.org/docs/presentations/revealjs/presenting.html#slide-numbers)
- [Multiplex](https://quarto.org/docs/presentations/revealjs/presenting.html#Multiplex)
- [Slide numbers](https://quarto.org/docs/presentations/revealjs/presenting.html#slide-numbers)
- [Print to pdf](https://quarto.org/docs/presentations/revealjs/presenting.html#slide-numbers)

-----------------------------------------------------------------------------

## Additional Title Slide Details

- See my title slide for ideas
- Lots of additional documentation [available](https://quarto.org/docs/reference/formats/presentations/revealjs.html)

-----------------------------------------------------------------------------

## Slide Transitions

You can also use slide transitions

I am not a fan of these (and you will need to turn off on slides that present content incrementally across slides)

This slide also demonstrates a simple table using markdown syntax

\

| Transition | Description                                                            |
|------------|------------------------------------------------------------------------|
| `none`     | No transition (default, switch instantly)                              |
| `fade`     | Cross fade                                                             |
| `slide`    | Slide horizontally                                                     |
| `convex`   | Slide at a convex angle                                                |
| `concave`  | Slide at a concave angle                                               |
| `zoom`     | Scale the incoming slide so it grows in from the center of the screen. |

::: footer
Learn more: [Slide Transitions](https://quarto.org/docs/presentations/revealjs/advanced.html#slide-transitions)
:::

-----------------------------------------------------------------------------

## Themes

10 Built-in Themes (or [create your own](https://quarto.org/docs/presentations/revealjs/themes.html#creating-themes))

::: {layout-ncol=2}
![](images/demo_moon.png)

![](images/demo_sky.png)
:::

You can also customize the .css file to apply the same style to many aspects of your slides.  Talk to Susan (or just look inside presentation.css)!

This slide also demonstrates how to put images side by side using `::: {layout-ncol=2}`

::: footer
Learn more: [Themes](https://quarto.org/docs/presentations/revealjs/themes.html)
:::